#!/bin/bash
i=0;
str=""
arr=("|" "/" "-" "\\")
while [ $i -le 100 ]
do
  let index=i%4
  let indexcolor=i%8
  let color=30+indexcolor
  printf "\e[0;$color;1m[%-100s][%d%%]%c\r" "$str" "$i" "${arr[$index]}"
  sleep 0.1
  let i++
  str+='='
done
printf "\n"

终端的字符颜色由转义序列(Escape Sequence)控制，是文本模式下的系统显示功能，与具体语言无关。转义序列以控制字符'ESC'开头。该字符的ASCII码十进制表示为27，十六进制表示为0x1B，八进制表示为033。多数转义序列超过两个字符，故通常以'ESC'和左括号'[‘开头。该起始序列称为控制序列引导符(CSI，Control Sequence Intro)，通由‘\033['或‘\e['代替。


通过转义序列设置终端显示属性时，可采用以下格式：	
\033[ Param {;Param;…}m 或 \e[ Param {;Param;…}m


其中，‘\033['或‘\e['引导转义序列，‘m'表示设置属性并结束转义序列。Param为属性值，{…}表示可选(多个参数之间用分号隔开，与顺序无关)。 转义序列相关的常用参数如下(通过man console_codes命令可查看更多的参数描述)：

显示： 0(默认)、1(粗体/高亮)、22(非粗体)、4(单条下划线)、24(无下划线)、5(闪烁)、25(无闪烁)、7(反显、翻转前景色和背景色)、27(无反显)

颜色： 0(黑)、1(红)、2(绿)、 3(黄)、4(蓝)、5(洋红)、6(青)、7(白)

前景色为30+颜色值，如31表示前景色为红色；背景色为40+颜色值，如41表示背景色为红色。

设置格式：

\033[显示方式;前景色;背景色m输出字符串\033[0m 或

\e[显示方式;前景色;背景色m输出字符串\033[0m






#!/bin/bash
i=0;          
str=""        
arr=("|" "/" "-" "\\")
while [ $i -le 100 ]
do            
  let index=i%4
  printf "\033[?25l\e[31m[%-100s][%d%%] [%c]\e[46m\r" "$str" "$i" "${arr[$index]}"
  sleep 0.1 
  let i++  
  str+='#' 
done          
printf "/33[?25h"
printf "\e[0m"
printf "\n"      

shell中printf的色彩搭配
颜色是通过添加专用序列来选择的 – 夹在 “/e[“和 “m”之间的数字。如果指定一个以上的数字，则用分号将它们分开。
echo -e "/e[31;42m"
第一个数字(31)为前景颜色(红色)；第二个数字为(42)背景颜色(绿色)
echo -e "/e[0m" 或 echo -e "/033[0m"
使用”/e[0m”序列将颜色重新设置为正常值
颜色分类：

/e[30m – /e[37m 设置前景色(字体颜色) 
echo -e “/e[30m” 灰色 
echo -e “/e[31m” 红色 
echo -e “/e[32m” 绿色 
echo -e “/e[33m” 黄色 
echo -e “/e[34m” 蓝色 
echo -e “/e[35m” 紫色 
echo -e “/e[36m” 淡蓝色 
echo -e “/e[37m” 白色

/e[40m – /e[47m 设置背景色 
echo -e “/e[40m” 灰色 
echo -e “/e[41m” 红色 
echo -e “/e[42m” 绿色 
echo -e “/e[43m” 黄色 
echo -e “/e[44m” 蓝色 
echo -e “/e[45m” 紫色 
echo -e “/e[46m” 淡蓝色 
echo -e “/e[47m” 白色

其他的一些参数
/033[0m 关闭所有属性 
/033[1m 设置高亮度 
/03[4m 下划线 
/033[5m 闪烁 
/033[7m 反显 
/033[8m 消隐 
/033[30m – /033[37m 设置前景色 
/033[40m – /033[47m 设置背景色 
/033[nA 光标上移n行 
/03[nB 光标下移n行 
/033[nC 光标右移n行 
/033[nD 光标左移n行 
/033[y;xH设置光标位置 
/033[2J 清屏 
/033[K 清除从光标到行尾的内容 
/033[s 保存光标位置 
/033[u 恢复光标位置 
/033[?25l 隐藏光标 
/33[?25h 显示光标



#!/bin/bash
i=0
bar=''
index=0
arr=( "|" "/" "-" "\\" )
while [ $i -le 100 ]
do
    let index=index%4
    printf "[%-100s][%d%%][\e[43;46;1m%c\e[0m]\r" "$bar" "$i" "${arr[$index]}"
    let i++
    let index++
    usleep 30000
    bar+='#'
done
printf "\n"



#!/bin/sh
b=''
for ((i=0;$i<=100;i+=2))
do
        printf "progress:[%-50s]%d%%\r" $b $i
        sleep 0.1
        b=#$b
done
echo
progress:[##################################################]100%



















































































































